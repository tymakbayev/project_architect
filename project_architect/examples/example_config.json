{
  "project": {
    "name": "example_project",
    "description": "A sample web application with a React frontend and Flask backend for managing user tasks and notes",
    "type": "fullstack"
  },
  "api_keys": {
    "anthropic": "YOUR_ANTHROPIC_API_KEY",
    "github": "YOUR_GITHUB_API_KEY"
  },
  "generation": {
    "temperature": 0.7,
    "max_tokens_per_request": 4000,
    "model": "claude-3-opus-20240229",
    "system_prompt_template": "You are an expert software architect and developer. Analyze the following project description and create a comprehensive project plan."
  },
  "project_types": {
    "python": {
      "templates": ["basic", "flask", "django", "fastapi"],
      "default_template": "basic"
    },
    "javascript": {
      "templates": ["node", "express", "react", "vue", "angular"],
      "default_template": "node"
    },
    "fullstack": {
      "templates": ["react-flask", "react-express", "vue-django", "angular-spring"],
      "default_template": "react-flask"
    },
    "mobile": {
      "templates": ["react-native", "flutter", "android-java", "ios-swift"],
      "default_template": "react-native"
    }
  },
  "output": {
    "format": "directory",
    "path": "./generated_projects",
    "create_zip": true,
    "include_documentation": true,
    "include_tests": true
  },
  "github_integration": {
    "create_repository": false,
    "repository_visibility": "private",
    "auto_push": false,
    "create_issues": false
  },
  "logging": {
    "level": "INFO",
    "file": "project_architect.log",
    "console": true,
    "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  },
  "advanced": {
    "use_cached_responses": true,
    "cache_directory": ".cache",
    "parallel_generation": true,
    "max_concurrent_requests": 3,
    "retry_attempts": 3,
    "retry_delay": 2,
    "timeout": 60,
    "validate_generated_code": true
  },
  "templates": {
    "custom_templates_path": "./custom_templates",
    "override_default_templates": false
  },
  "dependencies": {
    "python": {
      "development": ["pytest", "black", "flake8", "mypy", "isort"],
      "production": {
        "basic": ["requests", "pydantic"],
        "flask": ["flask", "flask-sqlalchemy", "flask-cors"],
        "django": ["django", "djangorestframework", "django-cors-headers"],
        "fastapi": ["fastapi", "uvicorn", "sqlalchemy"]
      }
    },
    "javascript": {
      "development": ["jest", "eslint", "prettier", "typescript"],
      "production": {
        "node": ["express", "dotenv", "mongoose"],
        "react": ["react", "react-dom", "react-router-dom", "axios"],
        "vue": ["vue", "vue-router", "vuex", "axios"],
        "angular": ["@angular/core", "@angular/common", "@angular/router"]
      }
    }
  },
  "example_project_structure": {
    "directories": [
      "src",
      "src/components",
      "src/utils",
      "src/services",
      "tests",
      "docs"
    ],
    "files": [
      "README.md",
      "requirements.txt",
      "src/__init__.py",
      "src/main.py",
      "tests/test_main.py"
    ]
  },
  "example_architecture_plan": {
    "components": [
      {
        "name": "Frontend",
        "description": "User interface built with React",
        "technology": "React",
        "responsibilities": ["User interaction", "State management", "API communication"]
      },
      {
        "name": "Backend API",
        "description": "RESTful API built with Flask",
        "technology": "Flask",
        "responsibilities": ["Handle requests", "Business logic", "Database access"]
      },
      {
        "name": "Database",
        "description": "Data storage using PostgreSQL",
        "technology": "PostgreSQL",
        "responsibilities": ["Store user data", "Store task data"]
      }
    ],
    "data_flows": [
      {
        "source": "Frontend",
        "target": "Backend API",
        "description": "HTTP requests for data"
      },
      {
        "source": "Backend API",
        "target": "Database",
        "description": "SQL queries and transactions"
      }
    ]
  }
}