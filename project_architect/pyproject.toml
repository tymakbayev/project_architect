[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
skip_glob = ["*/.venv/*", "*/venv/*", "*/env/*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=src --cov-report=term-missing --cov-report=xml:coverage.xml --cov-report=html:htmlcov"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "setup.py",
    "conftest.py",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py38, py39, py310, py311, lint, type, docs

[testenv]
deps =
    pytest>=7.3.1
    pytest-cov>=4.1.0
commands =
    pytest {posargs:tests}

[testenv:lint]
deps =
    black>=23.3.0
    isort>=5.12.0
    flake8>=6.0.0
commands =
    black --check src tests
    isort --check-only src tests
    flake8 src tests

[testenv:type]
deps =
    mypy>=1.3.0
commands =
    mypy src tests

[testenv:docs]
deps =
    sphinx>=7.0.0
    sphinx-rtd-theme>=1.2.1
    sphinx-autodoc-typehints>=1.23.0
commands =
    sphinx-build -b html docs/source docs/build/html
"""

[tool.poetry]
name = "project-architect"
version = "0.1.0"
description = "AI-powered project scaffolding and code generation tool"
authors = ["Project Architect Team <info@projectarchitect.dev>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/project-architect/project-architect"
documentation = "https://project-architect.readthedocs.io/"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
    { include = "src" }
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
anthropic = ">=0.5.0"
fastapi = ">=0.95.0"
uvicorn = ">=0.22.0"
pydantic = ">=2.0.0"
typer = ">=0.9.0"
rich = ">=13.4.0"
requests = ">=2.31.0"
python-dotenv = ">=1.0.0"
jinja2 = ">=3.1.2"
PyGithub = ">=1.59.0"
pyyaml = ">=6.0"
jsonschema = ">=4.17.3"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.3.1"
pytest-cov = ">=4.1.0"
black = ">=23.3.0"
isort = ">=5.12.0"
mypy = ">=1.3.0"
flake8 = ">=6.0.0"
pre-commit = ">=3.3.2"
tox = ">=4.6.0"

[tool.poetry.group.docs.dependencies]
sphinx = ">=7.0.0"
sphinx-rtd-theme = ">=1.2.1"
sphinx-autodoc-typehints = ">=1.23.0"

[tool.poetry.scripts]
project-architect = "src.interfaces.cli:app"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "src/__init__.py:__version__",
    "pyproject.toml:version"
]
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "env"]
skips = ["B101"]