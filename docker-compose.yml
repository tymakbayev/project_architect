version: '3.8'

services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project-architect-app
    restart: unless-stopped
    volumes:
      - ./:/app
      - generated-projects:/app/generated_projects
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - APP_ENV=development
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      - redis
    networks:
      - project-architect-network
    command: uvicorn src.interfaces.api:app --host 0.0.0.0 --port 8000 --reload

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: project-architect-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - project-architect-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Development tools service
  dev-tools:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: project-architect-dev
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - APP_ENV=development
    networks:
      - project-architect-network
    command: /bin/bash -c "pip install -e '.[dev]' && tail -f /dev/null"
    profiles:
      - dev

  # Documentation service
  docs:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: project-architect-docs
    volumes:
      - ./:/app
      - ./docs:/app/docs
    ports:
      - "8080:8080"
    networks:
      - project-architect-network
    command: /bin/bash -c "pip install -e '.[docs]' && cd docs && sphinx-autobuild . _build/html --host 0.0.0.0 --port 8080"
    profiles:
      - docs

  # Test service
  test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project-architect-test
    volumes:
      - ./:/app
    env_file:
      - .env.example
    environment:
      - PYTHONUNBUFFERED=1
      - APP_ENV=testing
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - redis
    networks:
      - project-architect-network
    command: /bin/bash -c "pip install -e '.[dev]' && pytest -xvs"
    profiles:
      - test

  # CLI demo service
  cli-demo:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project-architect-cli
    volumes:
      - ./:/app
      - generated-projects:/app/generated_projects
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - APP_ENV=development
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - project-architect-network
    command: /bin/bash -c "python -m src.interfaces.cli --help"
    profiles:
      - cli

networks:
  project-architect-network:
    driver: bridge
    name: project-architect-network

volumes:
  redis-data:
    name: project-architect-redis-data
  generated-projects:
    name: project-architect-generated-projects
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/generated_projects